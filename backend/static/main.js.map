{"version":3,"sources":["./src/app/schedules/schedules.component.ts","./src/app/schedules/schedules.component.html","./src/app/private-schedules/private-schedules.component.ts","./src/app/private-schedules/private-schedules.component.html","./src/app/log.service.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/policy/policy.component.ts","./src/app/policy/policy.component.html","./src/app/schedule.service.ts","./src/environments/environment.ts","./src/app/courses/courses.component.ts","./src/app/courses/courses.component.html","./src/app/policy.service.ts","./src/app/private-reviews/private-reviews.component.ts","./src/app/private-reviews/private-reviews.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/course.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/log/log.component.ts","./src/app/log/log.component.html","./src/app/app.module.ts","./src/app/review.service.ts","./src/app/auth.service.ts","./src/app/admin.guard.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/auth.guard.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/noauth/noauth.component.ts","./src/app/noauth/noauth.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ScheduleService } from '../schedule.service';\nimport { CourseService } from '../course.service';\nimport { Schedule } from '../Schedule';\nimport { Course } from '../Course';\n\n@Component({\n  selector: 'app-schedules',\n  templateUrl: './schedules.component.html',\n  styleUrls: ['./schedules.component.css']\n})\nexport class SchedulesComponent implements OnInit {\n\n  schedules: Schedule[];\n  selectedSchedule;\n  courseDetail;\n  courses: Course[];\n\n  tableHeader = ['Section', 'Component', 'Class Nbr', 'Days', 'Start Time', 'End Time', 'Location', 'Instructor', 'Requisites and Constraints', 'Status', 'Campus'];\n\n  constructor(private scheduleService: ScheduleService, private courseService: CourseService) {\n    this.courses = [];\n  }\n\n  ngOnInit(): void {\n    this.scheduleService.getPublicSchedules().subscribe(\n      res => {\n        this.schedules = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  getCourses(schedule: Schedule) {\n    for (let i = 0; i < schedule.courses.length; i++) {\n      this.courseService.getSearch(`/api/open/courses/${schedule.courses[i].subject}/${schedule.courses[i].course}`).subscribe(course => {\n        for (let c of course) {\n          this.courses.push(c);\n        }\n      }, error => {\n        this.courses = [];\n      });\n    }\n\n  }\n\n  onSelect(schedule: Schedule): void {\n    if (this.selectedSchedule != schedule) {\n      this.selectedSchedule = schedule;\n      this.courses = [];\n      this.getCourses(schedule);\n    } else if (this.selectedSchedule == schedule){\n      this.selectedSchedule = '';\n    }\n\n  }\n\n\n}\n","<div id='view-schedule-div' class=\"m-5\">\n    <h2>Public Schedules</h2>\n    <div *ngFor=\"let s of schedules | slice:0:10\" class=\"m-5 mainOutline\">\n        <div [class.selected]='c == selectedCourse'>\n            <h4>{{ s.name }} - {{ s.courses?.length || '0' }} Courses</h4>\n            <div>\n                <p><strong>Created by:</strong> {{s.username}} <strong>Last Modified:</strong> {{s.updatedAt}} <strong>Public:</strong> {{s.public}}</p>\n                <p><strong>Description:</strong> {{s.description}}</p>\n                <button (click)=\"onSelect(s)\" class=\"btn btn-primary mb-3\">\n                    Expand\n                </button>\n                <div *ngIf=\"s == selectedSchedule\">\n                    <p class=\"courses d-inline\"><strong>Courses: </strong></p>\n                    <div *ngFor=\"let tableCourse of courses\" class=\"p-5\">\n                        <h3>{{tableCourse.subject}} {{tableCourse.catalog_nbr}}</h3>\n                        <p><strong>Description: </strong>{{tableCourse.catalog_description}}</p>\n                        <table>\n                            <tr>\n                                <th *ngFor=\"let column of tableHeader\">{{ column }}</th>\n                            </tr>\n                            <tr>\n                                <td>{{ tableCourse.course_info[0].class_section }}</td>\n                                <td>{{ tableCourse.course_info[0].ssr_component }}</td>\n                                <td>{{ tableCourse.course_info[0].class_nbr }}</td>\n                                <td>{{ tableCourse.course_info[0].days }}</td>\n                                <td>{{ tableCourse.course_info[0].start_time }}</td>\n                                <td>{{ tableCourse.course_info[0].end_time }}</td>\n                                <td>{{ tableCourse.course_info[0].facility_ID }}</td>\n                                <td>{{ tableCourse.course_info[0].instructors }}</td>\n                                <td>{{ tableCourse.course_info[0].descr }}</td>\n                                <td>{{ tableCourse.course_info[0].enrl_stat }}</td>\n                                <td>{{ tableCourse.course_info[0].campus }}</td>\n                            </tr>\n                        </table>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { ScheduleService } from '../schedule.service';\nimport { CourseService } from '../course.service';\nimport { AuthService } from '../auth.service';\nimport { Schedule } from '../Schedule';\nimport { Course } from '../Course';\n\n@Component({\n  selector: 'app-private-schedules',\n  templateUrl: './private-schedules.component.html',\n  styleUrls: ['./private-schedules.component.css']\n})\nexport class PrivateSchedulesComponent implements OnInit {\n\n  schedules: Schedule[];\n  selectedSchedule;\n  courseDetail;\n  courses: Course[];\n  tableHeader = ['Section', 'Component', 'Class Nbr', 'Days', 'Start Time', 'End Time', 'Location', 'Instructor', 'Requisites and Constraints', 'Status', 'Campus'];\n\n\n  nameBox;\n  publicBox;\n  descriptionBox;\n  courseBox;\n  subjectBox;\n  nameEditBox;\n  publicEditBox;\n  descriptionEditBox;\n\n  newSchedule = {\n    name: '',\n    username: '',\n    description: '',\n    public: true,\n  }\n\n  userName;\n\n  addSelected = false;\n\n  editSelected;\n\n  constructor(private scheduleService: ScheduleService, private courseService: CourseService, private authService: AuthService,) {\n    this.scheduleService.getSchedules().subscribe(\n      res => {\n        this.schedules = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.authService.getUserProfile().subscribe(\n      res => {\n        this.userName = res['user'].username;\n      },\n      err => {\n        console.log(err);\n        return '';\n      }\n    );\n    this.nameBox = '';\n    this.publicBox = 'true';\n    this.descriptionBox = '';\n    this.courseBox = '';\n    this.subjectBox = '';\n    this.nameEditBox = '';\n    this.publicEditBox = 'true';\n    this.descriptionEditBox = '';\n  }\n\n  ngOnInit(): void {\n    this.scheduleService.getSchedules().subscribe(\n      res => {\n        this.schedules = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  getCourses(schedule: Schedule) {\n    for (let i = 0; i < schedule.courses.length; i++) {\n      this.courseService.getSearch(`/api/open/courses/${schedule.courses[i].subject}/${schedule.courses[i].course}`).subscribe(course => {\n        for (let c of course) {\n          this.courses.push(c);\n        }\n      }, error => {\n        this.courses = [];\n      });\n    }\n\n  }\n\n  onSelect(schedule: Schedule): void {\n    if (this.selectedSchedule != schedule) {\n      this.selectedSchedule = schedule;\n      this.courses = [];\n      this.getCourses(schedule);\n    } else if (this.selectedSchedule == schedule) {\n      this.selectedSchedule = '';\n    }\n\n  }\n\n  edit(scheduleEdit) {\n    if (this.nameEditBox == '') {\n      alert(\"Add a name\");\n    } else if (this.descriptionEditBox == '' || this.descriptionEditBox.length > 255) {\n      alert(\"Add valid description\");\n    } else if (this.subjectBox == '') {\n      alert(\"Add a subject\");\n    } else if (this.courseBox == '') {\n      alert(\"Add a course\");\n    } else {\n      this.courseService.getSearch(`/api/open/courses/${this.subjectBox}/${this.courseBox}`).subscribe(course => {\n        // Get the schedule to be editted\n        let schedule: Schedule = scheduleEdit;\n\n        let courseExits = false;\n        if (schedule.courses != undefined) {\n          schedule.courses.forEach(c => {\n            if (c.subject == this.subjectBox && c.course == this.courseBox) {\n              courseExits = true;\n            }\n          })\n        }\n\n\n        let finalData = [];\n\n        if (courseExits) {\n          // Delete the course if it exits\n          schedule.courses.forEach(c => {\n            if (c.course == this.courseBox && c.subject == this.subjectBox) { }\n            else finalData.push(c);\n          })\n        }\n        else {\n          // Add the course if it doesnt exist\n          if (schedule.courses != undefined) {\n            schedule.courses.forEach(c => {\n              finalData.push(c);\n            })\n\n          }\n          finalData.push({ subject: this.subjectBox, course: this.courseBox });\n        }\n\n        let fullScheduleData = {\n          courses: finalData,\n          name: this.nameEditBox,\n          description: this.descriptionEditBox,\n          public: this.publicEditBox,\n        };\n\n\n        // Course exits\n        this.scheduleService.editSchedule(scheduleEdit.name, fullScheduleData).subscribe(course => {\n          alert(\"Course Edited!\");\n          this.nameEditBox = '';\n          this.publicEditBox = 'true';\n          this.descriptionEditBox = '';\n          this.courseBox = '';\n          this.subjectBox = '';\n          this.refresh();\n        }, error => {\n          alert(error);\n          this.refresh();\n        });\n\n\n      }, error => {\n\n      });\n    }\n\n  }\n\n  delete(scheduleName) {\n    this.scheduleService.deleteSchedule(scheduleName).subscribe(\n      res => {\n        console.log(res);\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.refresh();\n  }\n\n  refresh() {\n    this.scheduleService.getSchedules().subscribe(\n      res => {\n        this.schedules = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  add() {\n    if (this.nameBox == '' || this.nameBox.length > 10) {\n      alert(\"Enter a valid name\");\n    } else if (this.schedules != undefined && this.schedules.length == 20){\n      alert(\"You cannot create more than 20 lists!\");\n    } else {\n      this.newSchedule.name = this.nameBox.replace(/<[^>]*>/g, '');\n      this.newSchedule.username = this.userName;\n      this.newSchedule.public = (this.publicBox === \"true\");\n      this.newSchedule.description = this.descriptionBox;\n\n\n      this.scheduleService.createSchedule(this.newSchedule).subscribe(course => {\n        alert(\"Course Added!\");\n        this.nameBox = '';\n        this.publicBox = 'true';\n        this.descriptionBox = '';\n        this.courseBox = '';\n        this.subjectBox = '';\n        this.refresh();\n      }, err => {\n        alert(err);\n      });\n    }\n\n\n\n  }\n\n  addSelect() {\n    if (this.addSelected) {\n      this.addSelected = false;\n    } else {\n      this.addSelected = true;\n    }\n  }\n\n  editSelect(schedule) {\n    if (this.editSelected == schedule.name) {\n      this.editSelected = '';\n    } else {\n      this.editSelected = schedule.name;\n    }\n  }\n\n  getSchedules() {\n    this.scheduleService.getSchedules().subscribe(\n      res => {\n        this.schedules = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n}\n","<button (click)=\"addSelect();\" class=\"btn btn-success\">\n    Add Schedule\n</button>\n<div class=\"mt-3 mb-3\" *ngIf=\"addSelected\">\n    <h3>Adding Schedule</h3>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">Schedule Name:\n        </label>\n        <input placeholder=\"Enter Schedule Name\" [(ngModel)]=\"nameBox\" class=\"form-control\" name=\"name\" />\n    </div>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">Schedule Description:\n        </label>\n        <input placeholder=\"Enter Schedule Description\" [(ngModel)]=\"descriptionBox\" class=\"form-control\" name=\"name\" />\n    </div>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">Public:\n        </label>\n        <select [(ngModel)]=\"publicBox\" class=\"form-control\">\n            <option selected value=\"true\">True</option>\n            <option value=\"false\">False</option>\n        </select>\n    </div>\n    <button (click)=\"add();\" class=\"btn btn-success\">\n        Add\n    </button>\n</div>\n<div *ngFor=\"let s of schedules | slice:0:10\" class=\"m-5 mainOutline\">\n    <div [class.selected]='c == selectedCourse'>\n        <h4>{{ s.name }} - {{ s.courses?.length || '0' }} Courses\n            <button (click)=\"editSelect(s);\" class=\"btn btn-success mr-3 ml-3\">\n                Edit Schedule\n            </button>\n            <button (click)=\"delete(s.name);\" class=\"btn btn-danger\">\n                Delete\n            </button>\n        </h4>\n        <div>\n            <p><strong>Created by:</strong> {{s.username}} <strong>Last Modified:</strong> {{s.updatedAt}}\n                <strong>Public:</strong> {{s.public}}</p>\n            <p><strong>Description:</strong> {{s.description}}</p>\n            <div class=\"mt-3 mb-3\" *ngIf=\"editSelected == s.name\">\n                <h3>Editing Schedule</h3>\n                <div class=\"form-group mr-3\">\n                    <label class=\"mr-3\">Schedule Name:\n                    </label>\n                    <input placeholder=\"Enter Schedule Name\" [(ngModel)]=\"nameEditBox\" class=\"form-control\" name=\"name\" />\n                </div>\n                <div class=\"form-group mr-3\">\n                    <label class=\"mr-3\">Schedule Description:\n                    </label>\n                    <input placeholder=\"Enter Schedule Description\" [(ngModel)]=\"descriptionEditBox\" class=\"form-control\"\n                        name=\"name\" />\n                </div>\n                <div class=\"form-group mr-3\">\n                    <label class=\"mr-3\">Subject Name:\n                    </label>\n                    <input placeholder=\"Enter Subject Name\" [(ngModel)]=\"subjectBox\" class=\"form-control\"\n                        name=\"name\" />\n                </div>\n                <div class=\"form-group mr-3\">\n                    <label class=\"mr-3\">Course Name:\n                    </label>\n                    <input placeholder=\"Enter Course Name\" [(ngModel)]=\"courseBox\" class=\"form-control\"\n                        name=\"name\" />\n                </div>\n                <div class=\"form-group mr-3\">\n                    <label class=\"mr-3\">Public:\n                    </label>\n                    <select [(ngModel)]=\"publicEditBox\" class=\"form-control\">\n                        <option selected value=\"true\">True</option>\n                        <option value=\"false\">False</option>\n                    </select>\n                </div>\n                <button (click)=\"edit(s);\" class=\"btn btn-success\">\n                    Edit\n                </button>\n            </div>\n            <button (click)=\"onSelect(s)\" class=\"btn btn-primary mb-3\">\n                Expand\n            </button>\n            <div *ngIf=\"s == selectedSchedule\">\n                <p class=\"courses d-inline\">\n                    <strong>Courses: </strong>\n                </p>\n                <div *ngFor=\"let tableCourse of courses\" class=\"p-5\">\n                    <h3>{{tableCourse.subject}} {{tableCourse.catalog_nbr}}</h3>\n                    <p><strong>Description: </strong>{{tableCourse.catalog_description}}</p>\n                    <table>\n                        <tr>\n                            <th *ngFor=\"let column of tableHeader\">{{ column }}</th>\n                        </tr>\n                        <tr>\n                            <td>{{ tableCourse.course_info[0].class_section }}</td>\n                            <td>{{ tableCourse.course_info[0].ssr_component }}</td>\n                            <td>{{ tableCourse.course_info[0].class_nbr }}</td>\n                            <td>{{ tableCourse.course_info[0].days }}</td>\n                            <td>{{ tableCourse.course_info[0].start_time }}</td>\n                            <td>{{ tableCourse.course_info[0].end_time }}</td>\n                            <td>{{ tableCourse.course_info[0].facility_ID }}</td>\n                            <td>{{ tableCourse.course_info[0].instructors }}</td>\n                            <td>{{ tableCourse.course_info[0].descr }}</td>\n                            <td>{{ tableCourse.course_info[0].enrl_stat }}</td>\n                            <td>{{ tableCourse.course_info[0].campus }}</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n\n\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of, throwError } from 'rxjs';\nimport { Log } from './Log';\nimport { AuthService } from './auth.service'\n\n\nimport {catchError} from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogService {\n\n  constructor(private http : HttpClient, private authService: AuthService) { }\n\n  handleError(error){\n    return throwError(error);\n    \n  }\n\n  getLogs():Observable<Log[]> {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.authService.getToken()\n    });\n    return this.http.get<Log[]>('/api/admin/logs', { headers: header })\n    .pipe(\n      catchError(this.handleError)\n    )\n\n  }\n\n  createLog(logInfo): Observable<Log> {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.authService.getToken()\n    });\n\n    return this.http.post<Log>('/api/admin/logs', logInfo, { headers: header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service'\nimport {Router} from '@angular/router'\n\nimport { User } from '../User';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  emailBox: String;\n  passwordBox: String;\n  nameBox: String;\n  userNameBox: String;\n  user: User;\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  constructor(private authService: AuthService, private router: Router) {\n    this.emailBox = '';\n    this.passwordBox = '';\n    this.userNameBox = '';\n    this.nameBox = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (!this.emailBox.match(this.emailRegex)) {\n      alert(\"Enter a Valid Email\");\n    } else if (this.passwordBox.length <= 4) {\n      alert(\"Password must be atleast 4 characters long\");\n    } else if (this.nameBox == '') {\n      alert(\"Name must not be empty\");\n    } else if (this.userNameBox == '') {\n      alert(\"User name must not be empty\");\n    } else {\n      this.user = {\n        name: this.nameBox,\n        email: this.emailBox,\n        password: this.passwordBox,\n        username: this.userNameBox,\n        admin: false,\n        verified: false,\n        activated: true\n      }\n      this.authService.postUser(this.user).subscribe(\n        res => {\n          alert(\"User Registered. Check your email for verification details.\");\n          this.emailBox = '';\n          this.passwordBox = '';\n          this.userNameBox = '';\n          this.nameBox = '';\n          this.router.navigateByUrl('/login');\n        },\n        err => {\n          console.log(err);\n          alert(err.message);\n          this.emailBox = '';\n          this.passwordBox = '';\n          this.userNameBox = '';\n          this.nameBox = '';\n        }\n      );\n    }\n\n\n  }\n\n}\n","<div class=\"container d-flex justify-content-center align-items-center mt-5\">\n    <form>\n        <h1>Western Timetable Register</h1>\n        <div class=\"form-group\">\n            <label for=\"name\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"name\" \n                placeholder=\"Enter Name\" [(ngModel)]=\"nameBox\" name=\"name\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"username\">User Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"username\" \n                placeholder=\"Enter User Name\" [(ngModel)]=\"userNameBox\" name=\"username\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\" [(ngModel)]=\"emailBox\" name=\"email\" required >\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" [(ngModel)]=\"passwordBox\" name=\"password\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)='onSubmit()'>Submit</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Policy } from '../Policy';\nimport { PolicyService } from '../policy.service'\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-policy',\n  templateUrl: './policy.component.html',\n  styleUrls: ['./policy.component.css']\n})\nexport class PolicyComponent implements OnInit {\n  policies: Policy[];\n  editSelected = false;\n  addSelected = false;\n\n  securityBox;\n  aupBox;\n  dmcaBox;\n  securityEditBox;\n  aupEditBox;\n  dmcaEditBox;\n\n\n\n  constructor(private policyService: PolicyService, private authService: AuthService) {\n    this.securityBox = '';\n    this.aupBox = '';\n    this.dmcaBox = '';\n    this.securityEditBox = '';\n    this.aupEditBox = '';\n    this.dmcaEditBox = '';\n  }\n\n  ngOnInit(): void {\n    this.policyService.getPolicy().subscribe(\n      res => {\n        this.policies = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  addPolicy() {\n    if (this.securityBox.length > 255) {\n      alert('Security box must be less than 255 characters');\n    } else if (this.aupBox.length > 255) {\n      alert('AUP box must be less than 255 characters');\n    } else if (this.dmcaBox.length > 255) {\n      alert('DMCA box must be less than 255 characters');\n    } else {\n      let newPolicy = {\n        security: this.securityBox,\n        aup: this.aupBox,\n        dmca: this.dmcaBox\n      }\n\n      this.policyService.createPolicy(newPolicy).subscribe(policy => {\n        alert(\"Policy Added!\");\n        this.securityBox = '';\n        this.aupBox = '';\n        this.dmcaBox = '';\n        this.refresh();\n      }, err => {\n        alert(err);\n      });\n    }\n  }\n\n  isAdmin() {\n    return this.authService.getAdmin();\n  }\n\n  editSelect() {\n    if (this.editSelected) {\n      this.editSelected = false;\n    } else {\n      this.editSelected = true;\n    }\n  }\n\n  addSelect() {\n    console.log(this.isAdmin());\n    if (this.addSelected) {\n      this.addSelected = false;\n    } else {\n      this.addSelected = true;\n    }\n  }\n\n  refresh() {\n    this.policyService.getPolicy().subscribe(\n      res => {\n        this.policies = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  editPolicy(policy) {\n    if (this.securityEditBox.length > 255) {\n      alert('Security edit box must be less than 255 characters');\n    } else if (this.aupEditBox.length > 255) {\n      alert('AUP edit box must be less than 255 characters');\n    } else if (this.dmcaEditBox.length > 255) {\n      alert('DMCA edit box must be less than 255 characters');\n    } else {\n      let newPolicy = {\n        security: this.securityEditBox,\n        aup: this.aupEditBox,\n        dmca: this.dmcaEditBox,\n        _id: policy._id\n      }\n\n      this.policyService.editPolicy(newPolicy).subscribe(policy => {\n        alert(\"Policy Edited!\");\n        this.securityEditBox = '';\n        this.aupEditBox = '';\n        this.dmcaEditBox = '';\n        this.refresh();\n      }, err => {\n        alert(err);\n      });\n    }\n  }\n\n}\n","<button (click)=\"addSelect();\" class=\"btn btn-success m-5\" *ngIf=\"isAdmin()\">\n    Add Policy\n</button>\n<div class=\"m-5\" *ngIf=\"addSelected\">\n    <h3>Adding Policy</h3>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">Security and Privacy Policy:\n        </label>\n        <input placeholder=\"Enter Policy\" [(ngModel)]=\"securityBox\" class=\"form-control\" name=\"name\" />\n    </div>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">Acceptable Use Policy:\n        </label>\n        <input placeholder=\"Enter Policy\" [(ngModel)]=\"aupBox\" class=\"form-control\" name=\"name\" />\n    </div>\n    <div class=\"form-group mr-3\">\n        <label class=\"mr-3\">DMCA Notice:\n        </label>\n        <input placeholder=\"Enter Policy\" [(ngModel)]=\"dmcaBox\" class=\"form-control\" name=\"name\" />\n    </div>\n    <button (click)=\"addPolicy();\" class=\"btn btn-success\">\n        Add\n    </button>\n</div>\n<div class=\"m-5\" *ngFor=\"let p of policies\">\n    <h2 class=\"d-inline align-middle\">Policy - {{p.updatedAt}}</h2>\n    <button (click)=\"editSelect();\" class=\"btn btn-success d-inline ml-3\" *ngIf=\"isAdmin()\">\n        Edit Policy\n    </button>\n    <div class=\"\" *ngIf=\"editSelected\">\n        <h3>Editing Policy</h3>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Security and Privacy Policy:\n            </label>\n            <input placeholder=\"Enter Policy\" [(ngModel)]=\"securityEditBox\" class=\"form-control\" name=\"name\" />\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Acceptable Use Policy:\n            </label>\n            <input placeholder=\"Enter Policy\" [(ngModel)]=\"aupEditBox\" class=\"form-control\" name=\"name\" />\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">DMCA Notice:\n            </label>\n            <input placeholder=\"Enter Policy\" [(ngModel)]=\"dmcaEditBox\" class=\"form-control\" name=\"name\" />\n        </div>\n        <button (click)=\"editPolicy(p);\" class=\"btn btn-success\">\n            Edit\n        </button>\n    </div>\n    <h3>Security and Privacy Policy</h3>\n    <p>{{p.security}}</p>\n    <h3>Acceptable Use Policy</h3>\n    <p>{{p.aup}}</p>\n    <h3>DMCA notice & takedown policy (Contact: asahapde@uwo.ca)</h3>\n    <p>{{p.dmca}}</p>\n    <hr>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders  } from \"@angular/common/http\";\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Schedule } from './Schedule';\nimport { AuthService } from './auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScheduleService {\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  header = new HttpHeaders({\n    'Authorization': 'Bearer ' + this.authService.getToken()\n  });\n\n  handleError(errorResponse: HttpErrorResponse) {\n    console.log(JSON.stringify(errorResponse.error.text))\n    return throwError(errorResponse);\n\n  }\n\n  createSchedule(newSchedule): Observable<Schedule> {\n\n\n    return this.http.post<Schedule>('http://localhost:3000/api/secure/schedules', newSchedule, { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  deleteSchedule(deleteName: string): Observable<void> {\n    const url = `http://localhost:3000/api/secure/schedules/${deleteName}`;\n\n    return this.http.delete<void>(url, { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  getSchedules(): Observable<Schedule[]> {\n    return this.http.get<Schedule[]>('http://localhost:3000/api/secure/schedules', { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  getPublicSchedules() : Observable<Schedule[]> {\n    return this.http.get<Schedule[]>('http://localhost:3000/api/open/schedules', { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  editSchedule(editScheduleName: string, schedule): Observable<void> {\n    const url = `http://localhost:3000/api/secure/schedules/${editScheduleName}`;\n\n    return this.http.put<void>(url, schedule, { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course.service';\nimport { ReviewService } from '../review.service';\nimport { AuthService } from '../auth.service';\n\nimport { Course } from '../Course';\nimport { Review } from '../Review';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.css']\n})\nexport class CoursesComponent implements OnInit {\n  selectedOption: string;\n  courseBox: string;\n  subjectBox: string;\n  keywordBox: string;\n  courses: Course[];\n  results: Number = 0;\n  selectedCourse: Course;\n  reviews: Review[];\n\n  tableHeader = ['Section', 'Component', 'Class Nbr', 'Days', 'Start Time', 'End Time', 'Location', 'Instructor', 'Requisites and Constraints', 'Status', 'Campus'];\n\n  constructor(private courseService: CourseService, private reviewService: ReviewService, private authService: AuthService) {\n    this.selectedOption = '';\n    this.courseBox = '';\n    this.subjectBox = '';\n    this.keywordBox = '';\n  }\n\n  ngOnInit(): void {\n  }\n\n  submit(): void {\n    if (this.courseBox == '' && this.subjectBox != '' && this.selectedOption == '') {\n      this.courseService.getSearch(`/api/open/courses/${this.subjectBox}`).subscribe(course => {\n        this.courses = course;\n        this.results = this.courses.length;\n      }, error => {\n        this.courses = [];\n        this.results = this.courses.length;\n      });\n    }\n    else if (this.courseBox != '' && this.subjectBox != '' && this.selectedOption != '') {\n      this.courseService.getSearch(`/api/open/courses/${this.subjectBox}/${this.courseBox}/${this.selectedOption}`).subscribe(course => {\n        this.courses = course;\n        this.results = this.courses.length;\n      }, error => {\n        this.courses = [];\n        this.results = this.courses.length;\n      });\n    }\n    else if (this.courseBox != '' && this.subjectBox != '' && this.selectedOption == '') {\n      this.courseService.getSearch(`/api/open/courses/${this.subjectBox}/${this.courseBox}`).subscribe(course => {\n        this.courses = course;\n        this.results = this.courses.length;\n      }, error => {\n        this.courses = [];\n        this.results = this.courses.length;\n      });\n    }\n  }\n\n  viewAllCourses(): void {\n    this.selectedOption = '';\n    this.courseBox = '';\n    this.subjectBox = '';\n    this.courseService.getCourses().subscribe(course => {\n      this.courses = course;\n      this.results = this.courses.length;\n    });\n  }\n\n  search(): void {\n    if (this.keywordBox.length <= 3) {\n      alert(\"Enter 4 characters into keyword box\");\n    } else {\n      this.courseService.getKeyword(`/api/open/keywords/${this.keywordBox}`).subscribe(course => {\n\n        this.courses = course;\n        this.results = this.courses.length;\n      }, error => {\n        this.courses = [];\n        this.results = this.courses.length;\n      });\n    }\n\n  }\n\n  onSelect(course: Course): void {\n    this.selectedCourse = course\n    this.getReview(this.selectedCourse)\n  }\n\n  getReview(course: Course): void {\n    this.reviewService.getReviews().subscribe(review => {\n      this.reviews = review;\n      this.reviews = this.reviews.filter((r) => {\n        return r.courseId == (course.subject + \" \" + course.catalog_nbr)\n      })\n    });\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n}\n","<div class=\"m-5\">\n    <div class=\"m-5\">\n        <h2 class=\"text-center\">Western Timetable</h2>\n        <h4>About</h4>\n        <p>Welcome to western timetable. Here you can create personalized timetables and view public timetables along\n            with all the course offerings. You may also view and add your reviews for the courses listed. Please log in\n            or register to access complete features.</p>\n        <div *ngIf='!isLoggedIn()'>\n            <button routerLink=\"/login\" class=\"btn btn-success mr-3\">\n                LOG IN\n            </button>\n            <button routerLink=\"/register\" class=\"btn btn-success\">\n                REGISTER\n            </button>\n        </div>\n    </div>\n    <h2 class=\"text-center\">Search</h2>\n    <div class=\"d-flex justify-content-center\">\n\n        <div class=\"form-inline\">\n            <div class=\"form-group mr-3\">\n                <label class=\"mr-3\">Subject:</label>\n                <input placeholder=\"Enter Subject Code\" [(ngModel)]=\"subjectBox\" class=\"form-control\" />\n            </div>\n\n            <div class=\"form-group mr-3\">\n                <label class=\"mr-3\">Course Number:\n                </label>\n                <input placeholder=\"Enter Course Number\" [(ngModel)]=\"courseBox\" class=\"form-control\" />\n\n            </div>\n\n            <div class=\"form-group mr-3\">\n                <label class=\"mr-3\">Component:\n                </label>\n                <select [(ngModel)]=\"selectedOption\" class=\"form-control\">\n                    <option selected value=\"\">All</option>\n                    <option value=\"LEC\">Lecture</option>\n                    <option value=\"TUT\">Tutorial</option>\n                    <option value=\"LAB\">Lab</option>\n                </select>\n\n            </div>\n\n            <div class=\"form-group mr-3\">\n                <button (click)=\"submit();\" class=\"btn btn-primary mr-3\">\n                    Submit\n                </button>\n                <button (click)=\"viewAllCourses();\" class=\"btn btn-primary mr-3\">\n                    View All Courses\n                </button>\n            </div>\n\n            <div class=\"form-group mr-3\">\n                <label class=\"mr-3\">Keyword:\n                </label>\n                <input placeholder=\"Enter keyword\" [(ngModel)]=\"keywordBox\" class=\"form-control\" />\n\n            </div>\n\n\n            <div class=\"form-group mr-3\">\n                <button (click)=\"search();\" class=\"btn btn-primary\">\n                    Search\n                </button>\n            </div>\n\n\n\n        </div>\n\n\n\n    </div>\n\n    <hr>\n\n    <p>{{ results }} Result(s)</p>\n    <div *ngFor='let c of courses'\n        [ngClass]=\"{'blue' : c.course_info[0].ssr_component == 'TUT', 'red' : c.course_info[0].ssr_component == 'LAB'}\"\n        class=\"m-5\" (click)='onSelect(c)'>\n        <h2>{{c.subject}} {{c.catalog_nbr}} - {{c.className}}</h2>\n        <p><strong>Course description: </strong>{{c.catalog_description}}</p>\n        <table [class.selected]='c == selectedCourse'>\n            <tr>\n                <th *ngFor=\"let column of tableHeader\">{{ column }}</th>\n            </tr>\n            <tr>\n                <td>{{ c.course_info[0].class_section }}</td>\n                <td>{{ c.course_info[0].ssr_component }}</td>\n                <td>{{ c.course_info[0].class_nbr }}</td>\n                <td>{{ c.course_info[0].days }}</td>\n                <td>{{ c.course_info[0].start_time }}</td>\n                <td>{{ c.course_info[0].end_time }}</td>\n                <td>{{ c.course_info[0].facility_ID }}</td>\n                <td>{{ c.course_info[0].instructors }}</td>\n                <td>{{ c.course_info[0].descr }}</td>\n                <td>{{ c.course_info[0].enrl_stat }}</td>\n                <td>{{ c.course_info[0].campus }}</td>\n            </tr>\n        </table>\n        <div *ngIf='c == selectedCourse' class='mt-5 review'>\n            <h3>Reviews for {{c.subject}} {{c.catalog_nbr}}: </h3>\n            <div *ngFor='let r of reviews'>\n                <h4>\"{{r.title}}\" by {{r.username}} at {{r.updatedAt}}</h4>\n                <p>{{r.review}}</p>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders  } from \"@angular/common/http\";\nimport { Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { AuthService } from './auth.service'\nimport { Policy } from './Policy';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PolicyService {\n\n  constructor(private http: HttpClient, private authService: AuthService) { }\n\n  header = new HttpHeaders({\n    'Authorization': 'Bearer ' + this.authService.getToken()\n  });\n\n  handleError(errorResponse: HttpErrorResponse) {\n    console.log(JSON.stringify(errorResponse.error.text))\n    return throwError(errorResponse);\n\n  }\n\n  getPolicy(): Observable<Policy[]> {\n    return this.http.get<Policy[]>('/api/open/policy', { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  createPolicy(newPolicy): Observable<Policy> {\n    return this.http.post<Policy>('/api/admin/policy', newPolicy, { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n  editPolicy(policy): Observable<void> {\n    const url = `/api/admin/policy/${policy._id}`;\n\n    return this.http.put<void>(url, policy, { headers: this.header })\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private-reviews',\n  templateUrl: './private-reviews.component.html',\n  styleUrls: ['./private-reviews.component.css']\n})\nexport class PrivateReviewsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>private-reviews works!</p>\n","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'western-timetable';\n\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { User } from '../User';\nimport { AuthService } from '../auth.service';\nimport { ReviewService } from '../review.service';\nimport { Review } from '../Review';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  users: User[];\n  reviews: Review[];\n\n  constructor(private authService: AuthService, private reviewService: ReviewService) { }\n\n  ngOnInit(): void {\n    this.authService.getAllUsers().subscribe(\n      res => {\n\n        this.users = res['user'];\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.reviewService.getAllReviews().subscribe(\n      res => {\n        this.reviews = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  changeAdmin(user) {\n    let info = {admin:false}\n    if (user.admin) {\n      info = {admin:false}\n      this.refresh()\n\n    } else {\n      info = {admin:true}\n      this.refresh()\n    }\n\n    this.authService.toggleUserInfo(user._id, info).subscribe(\n      res => {\n        alert(\"User admin status changed!\");\n      },\n      err => {\n        alert(err);\n\n      }\n    );\n    this.refresh()\n  }\n\n  changeActive(user) {\n    let info = {activated:false}\n    if (user.activated) {\n      info = {activated:false}\n      this.refresh()\n    } else {\n      info = {activated:true}\n      this.refresh()\n    }\n\n    this.authService.toggleUserInfo(user._id, info).subscribe(\n      res => {\n        alert(\"User active status changed!\");\n      },\n      err => {\n        alert(err);\n\n      }\n    );\n    this.refresh()\n  }\n\n  changeHide(review) {\n    let info = {hidden:false}\n    if (review.hidden) {\n      info = {hidden:false}\n      this.refresh()\n    } else {\n      info = {hidden:true}\n      this.refresh()\n    }\n\n    this.authService.toggleReviewInfo(review.title, info).subscribe(\n      res => {\n        alert(\"Review hide status changed!\");\n      },\n      err => {\n        alert(err);\n\n      }\n    );\n    this.refresh()\n  }\n\n  refresh() {\n    this.authService.getAllUsers().subscribe(\n      res => {\n\n        this.users = res['user'];\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.reviewService.getAllReviews().subscribe(\n      res => {\n        this.reviews = res;\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n}\n","<div class=\"m-5\">\n    <div>\n        <h4>User List</h4>\n        <div *ngFor=\"let user of users\" class=\"mt-3\">\n            <p class=\"d-inline\"><strong>Name: </strong> [{{user.name}}] <strong>Username: </strong> [{{user.username}}]\n                <strong>Admin: </strong> {{user.admin}} <strong>Activated: </strong> {{user.activated}}</p>\n            <button (click)=\"changeAdmin(user)\" class=\"btn btn-success ml-3 mr-3\">\n                Toggle Admin\n            </button>\n            <button (click)=\"changeActive(user)\" class=\"btn btn-success ml-3 mr-3\">\n                Toggle Active\n            </button>\n        </div>\n    </div>\n    <div class=\"mt-3\">\n        <h4>Reviews</h4>\n        <div *ngFor=\"let review of reviews\" class=\"mt-3\">\n            <p class=\"d-inline\"><strong>Title: </strong> [{{review.title}}] <strong>Course Id: </strong>\n                [{{review.courseId}}]\n                <strong>last Modified: </strong> {{review.updatedAt}} <strong>hidden: </strong> {{review.hidden}}</p>\n            <p><strong>review: </strong> {{review.review}} </p>\n            <button (click)=\"changeHide(review)\" class=\"btn btn-success ml-3 mr-3\">\n                Toggle Hide\n            </button>\n        </div>\n    </div>\n\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable, of, throwError } from 'rxjs';\nimport { Course } from './Course';\n\nimport {catchError} from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CourseService {\n  courseURL: string = '/api/open/courses/';\n\n  constructor(private http : HttpClient) { }\n\n  getCourses():Observable<Course[]> {\n    return this.http.get<Course[]>(this.courseURL);\n\n  }\n\n  getSearch(url : string):Observable<Course[]> {\n    return this.http.get<Course[]>(url)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  getKeyword(url : string):Observable<Course[]> {\n    return this.http.get<Course[]>(url)\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error){\n    return throwError(error);\n    \n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from \"@angular/router\";\nimport { ReviewService } from '../review.service'\nimport { CourseService } from '../course.service'\nimport { Course } from '../Course'\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  userDetails;\n  passwordSelected = false;\n  reviewSelected = false\n  passwordBox;\n  confirmBox;\n\n  courses;\n  courseIdList = [];\n\n  titleBox;\n  courseIdBox;\n  reviewBox;\n\n  constructor(private authService: AuthService, private router: Router, private reviewService: ReviewService, private courseService: CourseService) {\n    this.userDetails = {}\n    this.courseIdList = [];\n    this.passwordBox = '';\n    this.confirmBox = '';\n    this.titleBox = '';\n    this.courseIdBox = '';\n    this.reviewBox = '';\n  }\n\n  ngOnInit() {\n    this.authService.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res['user'];\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.courseService.getCourses().subscribe(course => {\n      this.courses = course;\n\n      this.courses.filter(course => {\n        this.courseIdList.push(course.subject + \" \" + course.catalog_nbr);\n      });\n\n    });\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  onLogout() {\n    this.authService.deleteToken();\n    this.router.navigate(['/login']);\n  }\n\n  changePassword() {\n    if (this.passwordBox.length < 4) {\n      alert(\"Enter a valid password.\")\n    } else if (this.passwordBox != this.confirmBox) {\n      alert(\"Confirm password mismatch\");\n    } else {\n      this.authService.changePassword({ password: this.passwordBox }).subscribe(course => {\n        alert(\"Password changed!\");\n        this.passwordBox = '';\n        this.confirmBox = '';\n      }, err => {\n        alert(err);\n      });\n    }\n  }\n\n  addReview() {\n    if (this.titleBox == '') {\n      alert(\"Enter a title\");\n    } else if (this.courseIdBox == '') {\n      alert(\"Enter a course Id\");\n    } else if (this.reviewBox == \"\") {\n      alert(\"Enter a review\");\n    } else if (this.courseIdList.indexOf(this.courseIdBox.toUpperCase()) == -1) {\n      alert(\"Enter a valid course id!\");\n    } else {\n      let data = {\n        username: this.userDetails.username,\n        title: this.titleBox,\n        courseId: this.courseIdBox.toUpperCase(),\n        review: this.reviewBox\n      }\n\n\n      this.reviewService.createReview(data).subscribe(\n        res => {\n          alert(\"Review added!\");\n        },\n        err => {\n          alert(err);\n\n        }\n      );\n    }\n  }\n\n  passwordSelect() {\n    if (this.passwordSelected) {\n      this.passwordSelected = false;\n    } else {\n      this.passwordSelected = true;\n    }\n  }\n\n  reviewSelect() {\n    if (this.reviewSelected) {\n      this.reviewSelected = false;\n    } else {\n      this.reviewSelected = true;\n    }\n  }\n\n}\n","<div class=\"m-5\">\n    <h3 class=\"d-inline\">Welcome back, {{userDetails.name}}</h3>\n    <button (click)=\"passwordSelect();\" class=\"btn btn-success ml-3\" *ngIf=\"isLoggedIn()\">\n        Change Password\n    </button>\n    <button (click)=\"reviewSelect();\" class=\"btn btn-success ml-3\" *ngIf=\"isLoggedIn()\">\n        Add Review to a course\n    </button>\n    <div class=\"mt-3 mb-3\" *ngIf=\"reviewSelected\">\n        <h3>Adding a review</h3>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Title:\n            </label>\n            <input placeholder=\"Enter Title\" [(ngModel)]=\"titleBox\" class=\"form-control\" name=\"name\" type=\"text\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Course Id:\n            </label>\n            <input placeholder=\"Enter course Id\" [(ngModel)]=\"courseIdBox\" class=\"form-control\" name=\"name\" type=\"text\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Review:\n            </label>\n            <input placeholder=\"Enter review\" [(ngModel)]=\"reviewBox\" class=\"form-control\" name=\"name\" type=\"text\"/>\n        </div>\n\n        <button (click)=\"addReview();\" class=\"btn btn-success\">\n            Add\n        </button>\n    </div>\n    <div class=\"mt-3 mb-3\" *ngIf=\"passwordSelected\">\n        <h3>Changing Password</h3>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Password:\n            </label>\n            <input placeholder=\"Enter Password\" [(ngModel)]=\"passwordBox\" class=\"form-control\" name=\"name\" type=\"password\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Confirm Password:\n            </label>\n            <input placeholder=\"Reenter Password\" [(ngModel)]=\"confirmBox\" class=\"form-control\" name=\"name\" type=\"password\"/>\n        </div>\n        <button (click)=\"changePassword();\" class=\"btn btn-success\">\n            Change\n        </button>\n    </div>\n    <p><strong>These are your schedules:</strong></p>\n    <app-private-schedules></app-private-schedules>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Log } from '../Log';\nimport { LogService } from '../log.service';\n\n@Component({\n  selector: 'app-log',\n  templateUrl: './log.component.html',\n  styleUrls: ['./log.component.css']\n})\nexport class LogComponent implements OnInit {\n\n  titleBox;\n  typeBox;\n  dateRecieveBox;\n  dateSentBox;\n\n  addSelected = false;\n\n  logsData: Log[];\n\n  constructor(private logService: LogService) {\n    this.titleBox = '';\n    this.typeBox = '';\n    this.dateRecieveBox = '';\n    this.dateSentBox = '';\n  }\n\n  ngOnInit(): void {\n    this.logService.getLogs().subscribe(\n      res => {\n        this.logsData = res['log'];\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n  }\n\n  addLog() {\n    if (this.titleBox == '') {\n      alert(\"Enter a title!\");\n    } else if (this.typeBox == '') {\n      alert(\"Enter a type!\");\n    } else if (this.dateRecieveBox == '') {\n      alert(\"Enter date recieved!\");\n    } else if (this.dateSentBox == '') {\n      alert(\"Enter date sent!\");\n    } else {\n      let data = {\n        title: this.titleBox,\n        type: this.typeBox,\n        dateRecieved: this.dateRecieveBox,\n        dateSent: this.dateSentBox\n      }\n\n      this.logService.createLog(data).subscribe(\n        res => {\n          alert(\"Log Saved!\");\n          this.refresh();\n        },\n        err => {\n          alert(err);\n          this.refresh();\n\n        }\n      );\n      this.refresh();\n    }\n\n  }\n\n  addSelect() {\n    if (this.addSelected) this.addSelected = false;\n    else this.addSelected = true;\n  }\n\n\n  refresh() {\n    this.logService.getLogs().subscribe(\n      res => {\n        this.logsData = res['log'];\n      },\n      err => {\n        console.log(err);\n\n      }\n    );\n    this.titleBox = '';\n    this.typeBox = '';\n    this.dateRecieveBox = '';\n    this.dateSentBox = '';\n  }\n\n}\n","<div class=\"m-5\">\n    <h4>Instructions</h4>\n    <div>\n        <ol>\n            <li>Review All Takedown requests or disputes and inspect them.</li>\n            <li>Log the information by clicking add log button below.</li>\n            <li>All infringing reviews can be hidden through the admin panel by clicking \"toggle hide\" button.</li>\n            <li>Reviews can be restored by clicking \"toggle hide\" button on the admin panel.</li>\n        </ol>\n    </div>\n    <h4 class=\"d-inline\">Logs</h4>\n    <button (click)=\"addSelect()\" class=\"btn btn-success ml-3 mr-3\">\n        Add Log\n    </button>\n    <div class=\"mt-3\" *ngIf=\"addSelected\">\n        <h3>Adding Log</h3>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Title:\n            </label>\n            <input placeholder=\"Enter Title\" [(ngModel)]=\"titleBox\" class=\"form-control\" name=\"name\" type=\"text\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Type:\n            </label>\n            <input placeholder=\"Enter Type\" [(ngModel)]=\"typeBox\" class=\"form-control\" name=\"name\" type=\"text\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Date Sent:\n            </label>\n            <input placeholder=\"Enter date sent\" [(ngModel)]=\"dateSentBox\" class=\"form-control\" name=\"name\" type=\"date\"/>\n        </div>\n        <div class=\"form-group mr-3\">\n            <label class=\"mr-3\">Date Recieved:\n            </label>\n            <input placeholder=\"Enter date recieved\" [(ngModel)]=\"dateRecieveBox\" class=\"form-control\" name=\"name\" type=\"date\"/>\n        </div>\n        <button (click)=\"addLog();\" class=\"btn btn-success\">\n            Add\n        </button>\n    </div>\n    <div *ngFor=\"let l of logsData\" class=\"mt-3\">\n        <p class=\"d-inline\"><strong>Title: </strong> [{{l.title}}] <strong>Type: </strong>\n            [{{l.type}}]\n            <strong>Date Sent: </strong> {{l.dateSent}} <strong>Date Recieved: </strong> {{l.dateRecieved}}</p>\n    </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoursesComponent } from './courses/courses.component';\nimport { SchedulesComponent } from './schedules/schedules.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { PrivateSchedulesComponent } from './private-schedules/private-schedules.component';\nimport { PolicyComponent } from './policy/policy.component';\nimport { LogComponent } from './log/log.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { FormsModule } from '@angular/forms';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { NoauthComponent } from './noauth/noauth.component';\nimport { PrivateReviewsComponent } from './private-reviews/private-reviews.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CoursesComponent,\n    SchedulesComponent,\n    LoginComponent,\n    RegisterComponent,\n    PrivateSchedulesComponent,\n    PolicyComponent,\n    LogComponent,\n    AdminComponent,\n    ProfileComponent,\n    NavbarComponent,\n    NoauthComponent,\n    PrivateReviewsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of, throwError } from 'rxjs';\nimport { Review } from './Review';\nimport { AuthService } from './auth.service'\n\nimport {catchError} from 'rxjs/operators'; \n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReviewService {\n  reviewURL: string = 'http://localhost:3000/api/secure/reviews/';\n\n  constructor(private http : HttpClient, private authService: AuthService) { }\n\n  getAllReviews():Observable<Review[]> {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.authService.getToken()\n    });\n    return this.http.get<Review[]>('/api/admin/reviews/', { headers: header })\n    .pipe(\n      catchError(this.handleError)\n    )\n\n  }\n\n  getReviews():Observable<Review[]> {\n    return this.http.get<Review[]>('/api/open/reviews/')\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  createReview(data): Observable<Review> {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.authService.getToken()\n    });\n    return this.http.post<Review>('/api/secure/reviews/', data, { headers: header })\n    .pipe(\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error){\n    return throwError(error);\n    \n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from './User';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  noAuthHeader = { headers: new HttpHeaders({ 'NoAuth': 'True' }) };\n\n  adminUser = false;\n  constructor(private http: HttpClient) { }\n\n  //HttpMethods\n\n  postUser(user: User) {\n    return this.http.post('/api/open/register', user);\n  }\n\n  login(authCredentials) {\n    return this.http.post('/api/open/login', authCredentials);\n  }\n\n  googleLogin() {\n    return this.http.get('/api/open/google/');\n  }\n\n  getUserProfile() {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.getToken()\n    });\n    return this.http.get('/api/secure/profile', { headers: header });\n  }\n\n  changePassword(password) {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.getToken()\n    });\n    return this.http.post('/api/secure/updatepassword', password, { headers: header });\n  }\n\n  //Helper Methods\n\n  setToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  deleteToken() {\n    localStorage.removeItem('token');\n  }\n\n  getUserPayload() {\n    var token = this.getToken();\n    if (token) {\n      var userPayload = atob(token.split('.')[1]);\n      return JSON.parse(userPayload);\n    }\n    else\n      return null;\n  }\n\n  isLoggedIn() {\n    var userPayload = this.getUserPayload();\n    if (userPayload)\n      return userPayload.exp > Date.now() / 1000;\n    else\n      return false;\n  }\n\n  setAdmin(isAdmin){\n    localStorage.setItem('admin', isAdmin);\n  }\n\n  getAdmin() {\n    if(localStorage.getItem('admin') == 'true'){\n      return true;\n    }\n    return false;\n  }\n\n  getAllUsers() {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.getToken()\n    });\n    return this.http.get('/api/admin/getUsers', { headers: header });\n  }\n\n  toggleUserInfo(id, info) {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.getToken()\n    });\n    return this.http.put(`/api/admin/editUser/${id}`, info, { headers: header });\n  }\n\n  toggleReviewInfo(title, info) {\n    const header = new HttpHeaders({\n      'Authorization': 'Bearer ' + this.getToken()\n    });\n    return this.http.put(`/api/admin/reviews/${title}`, info, { headers: header });\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n    if (!this.authService.getAdmin()) {\n      this.router.navigateByUrl('/noauth');\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  userDetails;\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n\n  onLogout() {\n    this.authService.deleteToken();\n    this.router.navigate(['/login']);\n    this.authService.setAdmin(false);\n  }\n\n  isAdmin() {\n    return this.authService.getAdmin();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\" style=\"background-color: #e3f2fd;\">\n    <a class=\"navbar-brand\" routerLink='/'>Western Timetable</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\"\n        aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/'>Home</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/schedules'>Schedules</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink='/policy'>Policy</a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isLoggedIn()'>\n                <a class=\"nav-link\" routerLink='/profile'>Profile</a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isLoggedIn() && isAdmin()'>\n                <a class=\"nav-link\" routerLink='/admin'>Admin</a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isLoggedIn() && isAdmin()'>\n                <a class=\"nav-link\" routerLink='/log'>Logs</a>\n            </li>\n        </ul>\n        <span class=\"navbar-text\">\n            <div *ngIf='!isLoggedIn()'>\n                <button routerLink=\"/login\" class=\"btn btn-success mr-2\">\n                    LOG IN\n                </button>\n                <button routerLink=\"/register\" class=\"btn btn-success\">\n                    REGISTER\n                </button>\n            </div>\n            <div *ngIf='isLoggedIn()'>\n                <button (click)=\"onLogout()\" class=\"btn btn-danger\">\n                    LOG OUT\n                </button>\n            </div>\n        </span>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) {\n\n  }\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigateByUrl('/login');\n      this.authService.deleteToken();\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CoursesComponent } from './courses/courses.component';\nimport { SchedulesComponent } from './schedules/schedules.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PolicyComponent } from './policy/policy.component';\nimport { LogComponent } from './log/log.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NoauthComponent } from './noauth/noauth.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { AdminGuard } from './admin.guard';\n\n\nconst routes: Routes = [\n  { path: 'courses', component: CoursesComponent},\n  { path: 'schedules', component: SchedulesComponent },\n  { path: 'admin', component: AdminComponent, canActivate:[AuthGuard, AdminGuard] },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'policy', component: PolicyComponent },\n  { path: 'noauth', component: NoauthComponent },\n  { path: 'log', component: LogComponent, canActivate:[AuthGuard, AdminGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate:[AuthGuard] },\n  { path: '',   redirectTo: 'courses', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {\n    this.emailBox = '';\n    this.passwordBox = '';\n  }\n\n  emailBox: String;\n  passwordBox: String;\n  emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  ngOnInit() {\n    if (this.authService.isLoggedIn())\n      this.router.navigateByUrl('/profile');\n  }\n\n  onSubmit() {\n    if (!this.emailBox.match(this.emailRegex)) {\n      alert(\"Enter a Valid Email\");\n    } else if (this.passwordBox == '') {\n      alert(\"Enter a Password\");\n    } else {\n      this.authService.login({ email: this.emailBox, password: this.passwordBox }).subscribe(\n        res => {\n          this.authService.setToken(res['token']);\n          this.authService.setAdmin(res['admin']);\n          this.router.navigateByUrl('/profile');\n        },\n        err => {\n          alert(err.error.message);\n        }\n      );\n    }\n\n\n  }\n\n  onGoogle() {\n\n    window.open('/api/open/google', \"mywindow\", \"location=1,status=1,scrollbars=1, width=800,height=800\");\n    window.addEventListener('message', (message) => {\n      this.authService.setToken(message.data.token);\n      this.authService.setAdmin(message.data.admin);\n      this.router.navigateByUrl('/profile');\n      \n    });\n\n\n  }\n\n}\n","<div class=\"container d-flex justify-content-center align-items-center mt-5\">\n    <form>\n        <h1>Western Timetable Login</h1>\n        <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Email address</label>\n            <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                placeholder=\"Enter email\" [(ngModel)]=\"emailBox\" name=\"email\" required>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"exampleInputPassword1\">Password</label>\n            <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" [(ngModel)]=\"passwordBox\" name=\"password\" required>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)='onSubmit()'>Submit</button>\n        <button type=\"submit\" class=\"btn btn-success mt-3 d-block\" (click)='onGoogle()'>Sign in with Google</button>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-noauth',\n  templateUrl: './noauth.component.html',\n  styleUrls: ['./noauth.component.css']\n})\nexport class NoauthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>You are Unauthorized to access this page!</h1>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}